class Solution:
    def minJumps(self, arr: List[int]) -> int:
        n = len(arr)
        q = collections.deque([0])
        obj = defaultdict(list)
        out = 0
        visited = set({0})
        
        if n <= 1:
            return 0
        
        for i in range(n):
            obj[arr[i]].append(i)
            
        while q:
            nex = []
            for i in q:
                if i == n-1:
                    return out
                
                for j in obj[arr[i]]:
                    if j not in visited:
                        visited.add(j)
                        nex.append(j)
                        
                obj[arr[i]] = []
                
                for j in [i-1, i+1]:
                    if j >= 0 and j < n and j not in visited:
                        visited.add(j)
                        nex.append(j)
            out += 1
            q = nex
            
        return -1
